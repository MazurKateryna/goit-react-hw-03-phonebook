(this["webpackJsonpgoit-react-hw-03-phonebook"]=this["webpackJsonpgoit-react-hw-03-phonebook"]||[]).push([[0],{16:function(t,e,n){},17:function(t,e,n){},18:function(t,e,n){"use strict";n.r(e);var a=n(0),c=n(1),o=n.n(c),r=n(9),s=n.n(r),i=(n(16),n(10)),l=n(2),u=n(3),b=n(5),h=n(4),d=n(7),j=n(20),m=(n(8),function(t){Object(b.a)(n,t);var e=Object(h.a)(n);function n(){var t;Object(l.a)(this,n);for(var a=arguments.length,c=new Array(a),o=0;o<a;o++)c[o]=arguments[o];return(t=e.call.apply(e,[this].concat(c))).state={name:"",number:""},t.handleChangeName=function(e){t.setState({name:e.target.value})},t.handleChangeNumber=function(e){t.setState({number:e.target.value})},t.handleSubmit=function(e){e.preventDefault(),t.props.onAddContact(Object(d.a)(Object(d.a)({},t.state),{},{id:Object(j.a)()})),t.setState({name:"",number:""})},t}return Object(u.a)(n,[{key:"render",value:function(){var t=this.state,e=t.name,n=t.number;return Object(a.jsxs)("form",{className:"ContactEditor",onSubmit:this.handleSubmit,children:[Object(a.jsxs)("label",{className:"ContactEditor-label",children:["Name",Object(a.jsx)("input",{className:"ContactEditor-input",type:"text",value:e,onChange:this.handleChangeName})]}),Object(a.jsxs)("label",{className:"ContactEditor-label",children:["Number",Object(a.jsx)("input",{className:"ContactEditor-input",type:"text",value:n,onChange:this.handleChangeNumber})]}),Object(a.jsx)("button",{type:"submit",className:"ContactEditor-button",children:"Add contact"})]})}}]),n}(c.Component)),f=(n(17),function(t){var e=t.contacts,n=t.onRemoveContact;return Object(a.jsx)("ul",{className:"ContactList",children:e.map((function(t){return Object(a.jsxs)("li",{className:"ContactList-item",children:[Object(a.jsxs)("p",{className:"ContactList-text",children:[t.name,": ",t.number]}),Object(a.jsx)("button",{type:"button",className:"ContactList-button",onClick:function(){return n(t.id)},children:"Delete"})]},t.id)}))})});function C(t){var e=t.value,n=t.onChangeFilter;return Object(a.jsxs)("div",{className:"ContactEditor",children:[Object(a.jsx)("p",{children:"Find contact by name"}),Object(a.jsx)("input",{type:"text",className:"ContactEditor-input",value:e,onChange:function(t){return n(t.target.value)}})]})}var O=function(t){Object(b.a)(n,t);var e=Object(h.a)(n);function n(){var t;Object(l.a)(this,n);for(var a=arguments.length,c=new Array(a),o=0;o<a;o++)c[o]=arguments[o];return(t=e.call.apply(e,[this].concat(c))).state={contacts:[],filter:""},t.addContact=function(e){t.state.contacts.find((function(t){return t.name===e.name}))?alert("".concat(e.name," is already in contacts.")):t.setState((function(t){return{contacts:[].concat(Object(i.a)(t.contacts),[e])}}))},t.removeContact=function(e){t.setState((function(t){return{contacts:t.contacts.filter((function(t){return t.id!==e}))}}))},t.changeFilter=function(e){t.setState({filter:e})},t.getFilterContact=function(){var e=t.state,n=e.contacts,a=e.filter;return n.filter((function(t){return t.name.toLowerCase().includes(a.toLocaleLowerCase())}))},t}return Object(u.a)(n,[{key:"componentDidMount",value:function(){var t=localStorage.getItem("contacts");t&&this.setState({contacts:JSON.parse(t)})}},{key:"componentDidUpdate",value:function(t,e){e.contacts!==this.state.contacts&&localStorage.setItem("contacts",JSON.stringify(this.state.contacts))}},{key:"render",value:function(){var t=this.state,e=t.contacts,n=t.filter,c=this.getFilterContact();return Object(a.jsxs)("div",{children:[Object(a.jsx)("h1",{children:"Phonebook"}),Object(a.jsx)(m,{onAddContact:this.addContact}),e.length>0&&Object(a.jsxs)("div",{children:[Object(a.jsx)("h2",{children:"Contacts"}),Object(a.jsx)(C,{value:n,onChangeFilter:this.changeFilter}),Object(a.jsx)(f,{contacts:c,onRemoveContact:this.removeContact})]})]})}}]),n}(c.Component);s.a.render(Object(a.jsx)(o.a.StrictMode,{children:Object(a.jsx)(O,{})}),document.getElementById("root"))},8:function(t,e,n){}},[[18,1,2]]]);
//# sourceMappingURL=main.4901e7ae.chunk.js.map